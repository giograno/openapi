name: Release test

on:
  workflow_dispatch:

env:
  git_user_name: giograno
  git_user_email: me@giograno.com

jobs:

  release-localstack-openapi:
    runs-on: buildjet-2vcpu-ubuntu-2204
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          repository: giograno/localstack-openapi

      - name: "Install release helper"
        run: |
          mkdir -p bin
          curl -o bin/release-helper.sh -L https://api.github.com/repos/localstack/localstack/contents/bin/release-helper.sh -H 'Accept: application/vnd.github.v3.raw'
          chmod +x bin/release-helper.sh

      - name: "Prepare git config"
        run: |
          git config user.name ${{ env.git_user_name }}
          git config user.email ${{ env.git_user_email }}

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Generate a semver-like version
        id: generate_version
        run: echo "version=3.8.1" >> $GITHUB_OUTPUT

      - name: "Wait for localstack, localstack-core, and localstack-ext release to appear"
        timeout-minutes: 3
        run: |
          bin/release-helper.sh pip-download-retry localstack ${{ steps.generate_version.outputs.version }}
          bin/release-helper.sh pip-download-retry localstack-core ${{ steps.generate_version.outputs.version }}
          bin/release-helper.sh pip-download-retry localstack-ext ${{ steps.generate_version.outputs.version }}

      - name: "Install LocalStack and LocalStack-ext"
        run: |
          python -m venv .oasvenv
          pip install localstack==${{ steps.generate_version.outputs.version }}
          pip install localstack-core==${{ steps.generate_version.outputs.version }}
          pip install localstack-ext==${{ steps.generate_version.outputs.version }}

      - name: "Create tagged LocalStack OpenAPI spec"
        run : |
          source .oasvenv/bin/activate
          pip install click
          python bin/update_aws_spec.py

      - name: "Commit release version"
        run: |
          DEPENDENCY_FILE="requirements.txt" bin/release-helper.sh git-commit-release ${{ needs.compute-versions.outputs.release }}
          git push --follow-tags

      - name: "Create GitHub release"
        run: gh release create "v${{ needs.compute-versions.outputs.release }}" --generate-notes --draft

      - name: "Show git modifications"
        run: |
          git log --oneline -n 2
          git show HEAD
